{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","prevGood","currentGood","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAOMC,EAtCR,SACEC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAqBzB,OAnBIH,IAAaP,EAASM,MACxBG,EAAaE,MAAK,SAACC,EAAUC,GAC3B,OAAQN,GACN,KAAKP,EAASc,QACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKb,EAASgB,OACZ,OAAOJ,EAASK,OAASJ,EAAYI,OAEvC,QACE,OAAO,MAKXb,GACFK,EAAaS,UAGRT,EAYcU,CACnBlB,EACAM,EACAH,GAGF,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAaP,EAASc,UAEtCS,QAAS,kBAAMf,EAAYR,EAASc,UAPtC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAaP,EAASgB,SAEtCO,QAAS,kBAAMf,EAAYR,EAASgB,SAPtC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAflB,IAEhBmB,QAAS,WAELlB,GADiB,IAAfD,IARR,sBAkBgB,IAAfA,GAAwBG,IAAaP,EAASM,KAC3C,GAEA,wBACEe,KAAK,SACLD,UACEE,IACE,SACA,YACA,YAGJC,QApEQ,WAClBlB,GAAc,GACdG,EAAYR,EAASM,OAyDb,sBAgBN,6BACE,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,eCpIhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.528c5e0c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((prevGood, currentGood) => {\n      switch (sortType) {\n        case SortType.ALPABET:\n          return prevGood.localeCompare(currentGood);\n\n        case SortType.LENGTH:\n          return prevGood.length - currentGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': isReversed !== true },\n          )}\n          onClick={() => {\n            if (isReversed === false) {\n              setIsReversed(true);\n            } else {\n              setIsReversed(false);\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        {isReversed === false && sortType === SortType.NONE\n          ? ''\n          : (\n            <button\n              type=\"button\"\n              className={\n                classNames(\n                  'button',\n                  'is-danger',\n                  'is-light',\n                )\n              }\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}